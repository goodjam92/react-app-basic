{"ast":null,"code":"var _jsxFileName = \"/Users/jammer/Documents/react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [counter, setValue] = useState(0);\n  const [keyword, setKeyword] = useState(\"\");\n  const onClick = () => setValue(prev => prev + 1);\n  const onChange = event => {\n    setKeyword(event.target.value);\n  };\n  // userEffect(function, []) => 특정 조건일 때 실행하도록 해주는 기능\n  // 기본 포맷의 []를 사용하면 상태를 체크하는 값이 없기에 그저 1번만 실행 함.\n  useEffect(() => {\n    console.log(\"I run only once.\");\n  }, []);\n  // 어떤 특정한 값에 변화를 감지하여 실행하려면 [] 안에 value keyword를 넣음.\n  // useEffect의 실행 함수 안에서 (if)특정 조건을 부여할 수 있음\n  useEffect(() => {\n    if (keyword !== \"\" && keyword.length > 5) {\n      console.log(\"I run when 'keyword' changes.\");\n    }\n  }, [keyword]);\n  useEffect(() => {\n    console.log(\"I run when 'counter' changes.\");\n  }, [counter]);\n  // 상태를 체크 할 값은 여러 값의 사용이 가능\n  useEffect(() => {\n    console.log(\"I run when keyword & counter changes.\");\n  }, [keyword, counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: keyword,\n      onChange: onChange,\n      type: \"text\",\n      placeholder: \"Search here..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JyLTOsqM4Q2c5KbSgzuQTRkubTI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","App","counter","setValue","keyword","setKeyword","onClick","prev","onChange","event","target","value","console","log","length"],"sources":["/Users/jammer/Documents/react-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [counter, setValue] = useState(0);\n  const [keyword, setKeyword] = useState(\"\");\n  const onClick = () => setValue((prev) => prev + 1);\n  const onChange = (event) => {\n    setKeyword(event.target.value);\n  };\n  // userEffect(function, []) => 특정 조건일 때 실행하도록 해주는 기능\n  // 기본 포맷의 []를 사용하면 상태를 체크하는 값이 없기에 그저 1번만 실행 함.\n  useEffect(() => {\n    console.log(\"I run only once.\");\n  }, []);\n  // 어떤 특정한 값에 변화를 감지하여 실행하려면 [] 안에 value keyword를 넣음.\n  // useEffect의 실행 함수 안에서 (if)특정 조건을 부여할 수 있음\n  useEffect(() => {\n    if (keyword !== \"\" && keyword.length > 5) {\n      console.log(\"I run when 'keyword' changes.\");\n    }\n  }, [keyword]);\n  useEffect(() => {\n    console.log(\"I run when 'counter' changes.\");\n  }, [counter]);\n  // 상태를 체크 할 값은 여러 값의 사용이 가능\n  useEffect(() => {\n    console.log(\"I run when keyword & counter changes.\");\n  }, [keyword, counter]);\n  return (\n    <div>\n      <input\n        value={keyword}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"Search here..\"\n      />\n      <h1>{counter}</h1>\n      <button onClick={onClick}>click me</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMO,OAAO,GAAG,MAAMH,QAAQ,CAAEI,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;EAClD,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1BJ,UAAU,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EACD;EACA;EACAX,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACAb,SAAS,CAAC,MAAM;IACd,IAAII,OAAO,KAAK,EAAE,IAAIA,OAAO,CAACU,MAAM,GAAG,CAAC,EAAE;MACxCF,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C;EACF,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EACbJ,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EACb;EACAF,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;EACtD,CAAC,EAAE,CAACT,OAAO,EAAEF,OAAO,CAAC,CAAC;EACtB,oBACE;IAAA,wBACE;MACE,KAAK,EAAEE,OAAQ;MACf,QAAQ,EAAEI,QAAS;MACnB,IAAI,EAAC,MAAM;MACX,WAAW,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAC3B,eACF;MAAA,UAAKN;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM,eAClB;MAAQ,OAAO,EAAEI,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QACvC;AAEV;AAAC,GAtCQL,GAAG;AAAA,KAAHA,GAAG;AAwCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}